import time
import logging
from aiogram import Bot, Dispatcher, executor, types
import logging
from log import *
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton


MSG = "{}, –í—ã–±–µ—Ä–µ—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é:"

bot = Bot("6142966797:AAEw4fXUvHUGWX2UbUrZltF549aglLSoTgY")
dp = Dispatcher(bot=bot)

@dp.message_handler(commands=['start'])
async def start_handler(message: types.Message):
    user_id = message.from_user.id
    user_name = message.from_user.first_name
    user_full_name = message.from_user.full_name
    user_bot = message.from_user.is_bot
    user_message = message.text
    logging.info(f'{user_id=} {user_bot=} {user_message=}')
    await message.reply(f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {user_full_name}!")
    time.sleep(1)
    btns = types.ReplyKeyboardMarkup(row_width=4)
    btn_why = types.KeyboardButton('/–ü–æ—á–µ–º—É_Raw?')
    btn_image = types.KeyboardButton('/–ú–µ–Ω—é üç¥ ')
    # btn_zakaz = types.KeyboardButton('/–ó–∞–∫–∞–∑–∞—Ç—å')
    btn_inst = types.KeyboardButton('/Instagramm')
    btns.add(btn_why, btn_image, btn_inst)
    await bot.send_message(user_id, MSG.format(user_name), reply_markup=btns)


urlkb = InlineKeyboardMarkup(row_width=1)
urlButton = InlineKeyboardButton(text='–ü–µ—Ä–µ–π—Ç–∏ –≤ –º–æ–π Instagramm üëâ', url='https://instagram.com/cyprus_raw?igshid=Zjc2ZTc4Nzk=')
urlButton2 = InlineKeyboardButton(text='–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑ –≤ WhatsApp üëâ', url='https://wa.me/+79046474802')
urlkb.add(urlButton,urlButton2)

 
@dp.message_handler(commands=['–ü–æ—á–µ–º—É_Raw?'])
async def why_raw(message: types.Message):
    with open("venv/raw.JPG", "rb") as f:
       await bot.send_photo(message.chat.id, caption='üéÇ–•–æ–ª–æ–¥–Ω–µ–Ω—å–∫–∏–π raw-–¥–µ—Å–µ—Ä—Ç –±–µ–∑ –≤—Ä–µ–¥–Ω—ã—Ö –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ ‚Äì –ø—Ä–∏—è—Ç–Ω—ã–π –∏ –∑–¥–æ—Ä–æ–≤—ã–π –ø–µ—Ä–µ–∫—É—Å –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è. –ü–æ–¥—Ö–æ–¥–∏—Ç —Å—ã—Ä–æ–µ–¥–∞–º, –≤–µ–≥–µ—Ç–∞—Ä–∏–∞–Ω—Ü–∞–º, –≤–µ–≥–∞–Ω–∞–º, –¥–µ—Ç—è–º, —Ç–µ–º, –∫—Ç–æ —Å–ª–µ–¥–∏—Ç –∑–∞ —Ñ–∏–≥—É—Ä–æ–π –∏ –ø—Ä–æ—Å—Ç–æ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç –ø–∏—Ç–∞—Ç—å—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ. –¢–∞–∫–æ–π —Ç–æ—Ä—Ç–∏–∫ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–∞—Ö–∞—Ä–∞ –∏ –º—É–∫–∏, –∫–æ—Ä–∂–∏ –¥–ª—è –Ω–µ–≥–æ –Ω–µ –Ω—É–∂–Ω–æ –≤—ã–ø–µ–∫–∞—Ç—å.üçìüçìüçì –¢–∞–∫–æ–π –¥–µ—Å–µ—Ä—Ç - –ø—Ä–æ—Å—Ç–æ –∏–¥–µ–∞–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –ø–æ–±–∞–ª–æ–≤–∞—Ç—å —Å–µ–±—è –≤–∫—É—Å–Ω–µ–Ω—å–∫–∏–º –∑–∞ —á–∞—à–µ—á–∫–æ–π —á–∞—è!‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è', photo=f)
               
    
#  bot.send_photo(id, photo, caption='–∂–µ–ª–∞–µ–º—ã–π —Ç–µ–∫—Å—Ç')       
                         
                                                   
@dp.message_handler(commands=['–ú–µ–Ω—é'])
async def cmd_send_image(message):
    with open("venv/–∞–≤–æ–∫–∞–¥–æ.PNG", "rb") as f:
        await bot.send_photo(message.chat.id, photo=f)
    with open("venv/–±–∞—É–Ω—Ç–∏.JPG", "rb") as f:
        await bot.send_photo(message.chat.id, photo=f)
    with open("venv/–≤–∏—à–Ω—è.PNG", "rb") as f:
        await bot.send_photo(message.chat.id, photo=f)
    with open("venv/–∫–ª—É–±–Ω–∏–∫–∞.JPG", "rb") as f:
        await bot.send_photo(message.chat.id, photo=f)
    with open("venv/–º–æ—Ä–∫–æ–≤–∫–∞.PNG", "rb") as f:
        await bot.send_photo(message.chat.id, photo=f)
    with open( "venv/—Å–≤–µ–∫–ª–∞.PNG", "rb") as f:
        await bot.send_photo(message.chat.id, photo=f)
    with open( "venv/—Ç–∏—Ä–∞–º–∏—Å—É.PNG", "rb") as f:
        await bot.send_photo(message.chat.id, photo=f)
    with open("venv/—Ç—ã–∫–≤–∞.PNG", "rb") as f:
        await bot.send_photo(message.chat.id, photo=f)
    with open("venv/—Ü–∏—Ç—Ä—É—Å.PNG", "rb") as f:
        await bot.send_photo(message.chat.id, photo=f)     


        
# @dp.message_handler(commands=['–ó–∞–∫–∞–∑–∞—Ç—å'])
# async def zakaz(message: types.Message):
#     await bot.send_message(message.from_user.id, '–ú–æ–π —Ç–µ–ª–µ—Ñ–æ–Ω',
#                            reply_markup=types.ReplyKeyboardRemove())        


@dp.message_handler(commands=['Instagramm'])
async def instagramm(message: types.Message):
     await message.answer("–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—á–∏—Ç–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã, —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑ –∏–ª–∏  –ø—Ä–æ—Å—Ç–æ –ø–æ–æ–±—â–∞—Ç—å—Å—è —Å–æ –º–Ω–æ–π", reply_markup=urlkb)


if __name__ == '__main__':
    executor.start_polling(dp)

